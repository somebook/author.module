%header
  - if @shard_languages.empty?
    .alert.alert-warning.clearfix= t('author.post.no_languages_alert')
  - else
    %div.pull-right
      - if @amazon || @youtube
        - if can? :news, Post.new(shard_id: @current_shard.id)
          %a{ href: new_video_path(:stream => Account::STREAMS.invert[:official]),class: %w(btn btn-inverse)}
            %i.icon-white.icon-plus
            = t('author.video.new_official')

        - if can? :blog, Post.new(shard_id: @current_shard.id)
          %a{ href:  new_video_path(:stream => Account::STREAMS.invert[:personal]),class: %w(btn btn-inverse)}
            %i.icon-white.icon-plus
            = t('author.video.new_personal')

        %a{ href: syncronize_videos_path, confirm: 'Are you sure?', class: %w(btn btn-info)}
          %i.icon-white.icon-refresh
          = t('author.video.syncronize')
      - else
        .alert.alert-error= raw t('author.video.connect_youtube_or_amazon')

  %h1
    %i.icon48-video
    = translate('author.video.listing')
= render partial: "author/shared/flash_messages"

%section.content
  %div.block
    %table.table.table-striped.data.videos
      %thead
        %tr
          %th= t('author.video.title')
          %th= t('author.video.created_at')
          %th= t('author.video.youtube')
  
      %tbody
        - @videos.each do |video|
          %tr
            %td
              - if video.job_ids.nil?
                = image_tag video.preview, width: 120, height: 90
              - else
                in progress
              %p
                = link_to "#{video.title} (#{video.length})", edit_video_path(video), class: %w(biglink)
              - video.categories.each do |cat|
                %span.badge.badge-info= cat.to_s
              %span.actions
                = link_to translate('global.edit'), edit_video_path(video), class: %w(graylink)
                = link_to translate('global.destroy'), [video], :confirm => 'Are you sure?', :method => :delete, class: %w(graylink)
            %td
              %span.small.light-gray
                = video.created_at.to_s(:long)
            %td
              - if video.youtube?
                = link_to t('author.video.watch_on_youtube'), video.url, class: %w(small gray)
